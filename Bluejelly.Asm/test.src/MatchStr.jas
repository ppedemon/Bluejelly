.module MatchStr:

.fun m[matcher]:
  matchstr
  .case "a": stack 1 pushstr "aa" ret
  .default: slide 0,1 pushstr "wrong!" ret
  .end
.end

.fun match:
  stack 1
  pushcont m
  retstr "x"
.end

.fun complexDef[matcher]:
  matchstr
  .case "all": stack 1 retstr "a"
  .case "hail": stack 1 retstr "b"
  .case "me!": stack 1 retstr "c"
  .default: slide 0,1 retstr "\"\u594f\nHello\ncrazy\nworld\""
  .end
.end

.fun matchHail:
  stack 1
  pushcont complexDef
  retstr "hail"
.end

.fun matchDef:
  stack 1
  pushcont complexDef
  retstr "xxxx"
.end

.fun complex[matcher]:
  matchstr
  .case "all": stack 1 retstr "a"
  .case "hail": stack 1 retstr "b"
  .case "me!": stack 1 retstr "c"
  .end
.end

.fun matchFailure:
  stack 1
  pushcode handler
  catch
  pushcont complex
  retstr "xxxx"
.end

.fun handler[arity=1]:
  stack 1
  slide 0,1
  retstr "wrong option!"
.end

.fun matchChr[matcher]:
  matchchr
  .case 'a' : stack 1 pushchr '\u58ff' ret
  .case '\n': stack 1 retchr '\n' 
  .end
.end

.fun matchc:
  stack 1
  pushcont matchChr
  pushchr '\141'
  ret
.end

.end
