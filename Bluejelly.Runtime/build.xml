<project name="Bluejelly.Runtime" default="dist" basedir=".">

    <property name="srcdir" location="${basedir}/src"/>
    <property name="bindir" location="${basedir}/bin"/>
    <property name="distdir" location="${basedir}/dist"/>
	<property file="bld.properties"/>

    <!-- Dependencies -->
    <property name="bluejelly.libs" location="${basedir}/../Bluejelly.Libs"/>

    <!-- Generate the bluejelly runtime distribution -->
    <target name="dist" depends="dist.clean,dist.prepare,dist.script,dist.jar">
        <property name="prefix" value="brt-${build.version}"/>
        <tar destfile="${distdir}/brt.tar">
            <tarfileset dir="${distdir}" 
                includes="brt-${build.version}.jar" prefix="${prefix}/lib"/>
            <tarfileset dir="${bluejelly.libs}/lib" prefix="${prefix}/lib">
                <include name="asm-all-3.2.jar"/>
                <include name="3rd-party-licenses.txt"/>
            </tarfileset>
            <tarfileset dir="${distdir}" 
                includes="brt.sh" filemode="744" prefix="${prefix}"/>
            <tarfileset dir="${basedir}/.." prefix="${prefix}">
               <include name="LICENSE"/>
               <include name="NOTICE"/>
            </tarfileset>
        </tar>
        <gzip destfile="${distdir}/brt.tar.gz" src="${distdir}/brt.tar"/>
        <delete>
            <fileset dir="${distdir}" includes="**/*.jar"/>
            <fileset dir="${distdir}" includes="**/*.tar"/>
        	<fileset dir="${distdir}" includes="brt.sh"/>
        </delete>
    </target>

    <!-- Prepare for generating distriution -->
    <target name="dist.prepare">
        <mkdir dir="${distdir}"/>
    </target>

    <!-- Create startup script -->
    <target name="dist.script">
        <copy file="${basedir}/brt.sh.template" tofile="${distdir}/brt.sh"/>
        <replaceregexp file="${distdir}/brt.sh" 
            match="\$\{build\.version\}"
            replace="${build.version}"
            flags="g"/>
    </target>
	
    <!-- Generate the runtime jar -->
    <target name="dist.jar" depends="prims.gen">
        <jar destfile="${distdir}/brt-${build.version}.jar" 
            basedir="${bindir}" 
            excludes="**/test/**">
        </jar>
    </target>

    <path id="prims.path">
        <pathelement path="${bindir}"/>
        <pathelement location="${libdir}/asm-3.2.jar"/>
        <pathelement location="${bluejelly.libs}/lib/asm-all-3.2.jar"/>
    </path>

    <!-- Process all primitive stubs -->
    <target name="prims.gen" depends="prims.clean">
        <javac srcdir="${srcdir}" destdir="${bindir}" includeantruntime="false"
            debug="on" classpathref="prims.path" source="1.6" target="1.6">
            <include name="bluejelly/*.java"/>
            <exclude name="bluejelly/Bools.java"/>
            <exclude name="bluejelly/PrimTransformer.java"/>
        </javac>
        <java classname="bluejelly.PrimTransformer" 
              failonerror="true" classpathref="prims.path">
            <arg value="Int"/>
            <arg value="Double"/>
            <arg value="BigInt"/>
        </java>
    </target>
    
    <!-- Remove generated primitive classes before generating them again -->
    <target name="prims.clean">
        <delete>
            <fileset dir="${bindir}/bluejelly">
                <exclude name="PrimTransformer*.class"/>
                <exclude name="Bools.class"/>
                <include name="*.class"/>
            </fileset>
        </delete>
    </target>
    
    <!-- Clean up stuff before generating code -->
    <target name="dist.clean">
        <delete quiet="true">
            <fileset dir="${distdir}" includes="**/*.jar"/>
            <fileset dir="${distdir}" includes="**/*.tar.gz"/>
        	<fileset dir="${distdir}" includes="brt.sh"/>
        </delete>
    </target>

</project>